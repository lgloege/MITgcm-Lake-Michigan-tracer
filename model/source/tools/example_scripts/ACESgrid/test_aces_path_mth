#!/bin/bash
#
#PBS -q one
#PBS -N tst_mth
#PBS -l nodes=1:ppn=2
#PBS -e /mit/jm_c/test_acesgrid/output/tst_mth.stderr
#PBS -o /mit/jm_c/test_acesgrid/output/tst_mth.stdout

# $Header: /u/gcmpack/MITgcm/tools/example_scripts/ACESgrid/test_aces_path_mth,v 1.8 2012/05/01 13:20:39 jmc Exp $
# $Name:  $

if test -f /etc/profile.d/modules.sh ; then
    . /etc/profile.d/modules.sh
fi
# Note: added "ulimit -s unlimited" in file "~/.bashrc"
# to pass big test (the 2 fizhi-cs-* test & adjoint tests) with MPI

dNam='acesgrid'
TST_DIR="$HOME/test_$dNam"
echo "start from TST_DIR='$TST_DIR' at: "`date`

umask 0022
#- to get case insensitive "ls" (and order of tested experiments)
export LC_ALL="en_US.UTF-8"

HERE=$TST_DIR/output
sfx='mth'
 module add ekopath
 OPTFILE="../tools/build_options/linux_amd64_pathf90"
#OPTFILE="$HERE/linux_amd64_pathf90"
 options="-j 2 -mth"
 export OMP_NUM_THREADS=2
 export PSC_OMP_STACK_SIZE=400m
 ulimit -s unlimited

dAlt=`date +%d` ; dAlt=`expr $dAlt % 3`
if [ $dAlt -eq 1 ] ; then options="$options -fast" ; fi

#- keep a copy of MPI_MFILE:
cp -p $PBS_NODEFILE $HERE"/mf_"$sfx

checkOut=1
#options="$options -nc" ; checkOut=0
#options="$options -q"  ; checkOut=0

gcmDIR="MITgcm_$sfx"
cd $TST_DIR
#- check for disk space:
dsp=`df -P . | tail -1 | awk '{print $5}' | sed 's/%$//'`
if [ $dsp -gt 99 ] ; then
  echo 'Not enough space on this disk => do not run testreport.'
  df .
  exit
fi
if [ $checkOut -eq 1 ] ; then
  if test -d $gcmDIR/CVS ; then
#- remove previous output tar files and tar & remove previous output-dir
    /bin/rm -f $gcmDIR/verification/??_${dNam}-${sfx}_????????_?.tar.gz
    ( cd $gcmDIR/verification
      listD=`ls -1 -d ??_${dNam}-${sfx}_????????_?`
      for dd in $listD
      do
        if test -d $dd ; then
          tar -cf ${dd}".tar" $dd > /dev/null 2>&1 && gzip ${dd}".tar" && /bin/rm -rf $dd
          RETVAL=$?
          if test "x$RETVAL" != x0 ; then
             echo "ERROR in tar+gzip prev outp-dir: $dd"
             echo " on '"`hostname`"' (return val=$RETVAL) but continue"
          fi
        fi
      done )
    ( cd $gcmDIR/verification ; ../tools/do_tst_2+2 -clean )
    echo "cvs update of dir $gcmDIR :"
    ( cd $gcmDIR ; cvs -q -d :pserver:cvsanon@mitgcm.org:/u/gcmpack update -P -d ) 2>&1
    RETVAL=$?
    if test "x$RETVAL" != x0 ; then
       echo "cvs update on '"`hostname`"' fail (return val=$RETVAL) => exit"
       exit
    fi
  else
    echo "no dir: $gcmDIR/CVS => try a fresh check-out"
    checkOut=2
  fi
fi
if [ $checkOut -eq 2 ] ; then
  if test -e $gcmDIR ; then
     rm -rf $gcmDIR
  fi
# cvs co MITgcm
  cvs -d :pserver:cvsanon@mitgcm.org:/u/gcmpack co -P -d $gcmDIR MITgcm > /dev/null 2>&1
  /usr/bin/find $gcmDIR -type d | xargs chmod g+rxs
  /usr/bin/find $gcmDIR -type f | xargs chmod g+r
fi

#- change dir to $gcmDIR/verification dir:
if test -e $gcmDIR/verification ; then
  if [ $checkOut -lt 2 ] ; then
    echo " dir $gcmDIR/verification exist" ; fi
  cd $gcmDIR/verification
else
  echo "no dir: $gcmDIR/verification => exit"
  exit
fi

echo ./testreport $options -of $OPTFILE -odir ${dNam}-$sfx
./testreport $options -of $OPTFILE -odir ${dNam}-$sfx

echo ''
echo ../tools/do_tst_2+2 -o ${dNam}-$sfx -a NONE
../tools/do_tst_2+2 -o ${dNam}-$sfx -a NONE

