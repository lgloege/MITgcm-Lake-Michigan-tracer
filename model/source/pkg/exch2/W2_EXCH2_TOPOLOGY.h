C      Tiling topology data structures header file
C      *** THIS FILE IS AUTOMATICALLY GENERATED ***
C      NTILES            :: Number of tiles in this topology 
C      MAX_NEIGHBOURS    :: Maximum number of neighbours any tile has.
C      exch2_domain_nxt  :: Total domain length in tiles. 
C      exch2_domain_nyt  :: Maximum domain height in tiles. 
C      exch2_tnx         :: Size in X for each tile.                  
C      exch2_tny         :: Size in Y for each tile.                  
C      exch2_tbasex      :: Tile offset in X within its sub-domain (cube face)
C      exch2_tbasey      :: Tile offset in Y within its sub-domain (cube face)
C      exch2_tglobalxlo  :: Tile base X index within global index space.
C      exch2_tglobalylo  :: Tile base Y index within global index space.
C      exch2_isWedge     :: 0 if West not at domain edge, 1 if it is.   
C      exch2_isNedge     :: 0 if North not at domain edge, 1 if it is.   
C      exch2_isEedge     :: 0 if East not at domain edge, 1 if it is.   
C      exch2_isSedge     :: 0 if South not at domain edge, 1 if it is.   
C      exch2_myFace      :: Cube face number used for I/O.               
C      exch2_nNeighbours :: Tile neighbour entries count.               
C      exch2_tProc       :: Rank of process owning tile                 
C                        :: (filled at run time).                       
C      exch2_neighbourId :: Tile number for each neighbour entry.        
C      exch2_opposingSend_record :: Record for entry in target tile send 
C                                :: list that has this tile and face     
C                                :: as its target.                       
C      exch2_pi          :: X index row of target to source permutation 
C                        :: matrix for each neighbour entry.            
C      exch2_pj          :: Y index row of target to source permutation 
C                        :: matrix for each neighbour entry.            
C      exch2_oi          :: X index element of target to source 
C                        :: offset vector for cell-centered quantities  
C                        :: of each neighbor entry.                     
C      exch2_oj          :: Y index element of target to source 
C                        :: offset vector for cell-centered quantities  
C                        :: of each neighbor entry.                     
C      exch2_oi_f        :: X index element of target to source 
C                        :: offset vector for face quantities           
C                        :: of each neighbor entry.                     
C      exch2_oj_f        :: Y index element of target to source 
C                        :: offset vector for face quantities           
C                        :: of each neighbor entry.                     
       INTEGER NTILES
       INTEGER MAX_NEIGHBOURS
       INTEGER exch2_domain_nyt
       INTEGER exch2_domain_nxt
       PARAMETER ( NTILES = 6)
       PARAMETER ( MAX_NEIGHBOURS = 4)
       PARAMETER ( exch2_domain_nxt=6)
       PARAMETER ( exch2_domain_nyt=1)
       INTEGER exch2_tnx(NTILES)
       INTEGER exch2_tny(NTILES)
       INTEGER exch2_tbasex(NTILES)
       INTEGER exch2_tbasey(NTILES)
       INTEGER exch2_txglobalo(NTILES)
       INTEGER exch2_tyglobalo(NTILES)
       INTEGER exch2_isWedge(NTILES)
       INTEGER exch2_isNedge(NTILES)
       INTEGER exch2_isEedge(NTILES)
       INTEGER exch2_isSedge(NTILES)
       INTEGER exch2_myFace(NTILES)
       INTEGER exch2_mydnx(NTILES)
       INTEGER exch2_mydny(NTILES)
       INTEGER exch2_nNeighbours(NTILES)
       INTEGER exch2_tProc(NTILES)
       INTEGER exch2_neighbourId(MAX_NEIGHBOURS,NTILES)
       INTEGER exch2_opposingSend_record(MAX_NEIGHBOURS,NTILES)
       INTEGER exch2_pi(2,MAX_NEIGHBOURS,NTILES)
       INTEGER exch2_pj(2,MAX_NEIGHBOURS,NTILES)
       INTEGER exch2_oi(MAX_NEIGHBOURS,NTILES)
       INTEGER exch2_oj(MAX_NEIGHBOURS,NTILES)
       INTEGER exch2_oi_f(MAX_NEIGHBOURS,NTILES)
       INTEGER exch2_oj_f(MAX_NEIGHBOURS,NTILES)
                                                  
                                                  
C      Exchange execution loop data structures    
       INTEGER exch2_itlo_c(MAX_NEIGHBOURS,NTILES)
       INTEGER exch2_ithi_c(MAX_NEIGHBOURS,NTILES)
       INTEGER exch2_jtlo_c(MAX_NEIGHBOURS,NTILES)
       INTEGER exch2_jthi_c(MAX_NEIGHBOURS,NTILES)
                                                  
       COMMON /W2_EXCH2_TOPO_I/                   
     &        exch2_tnx, exch2_tny,               
     &        exch2_tbasex,exch2_tbasey,          
     &        exch2_txglobalo,exch2_tyglobalo,    
     &        exch2_isWedge, exch2_isNedge,       
     &        exch2_isEedge, exch2_isSedge,       
     &        exch2_myFace, exch2_mydnx, exch2_mydny, 
     &        exch2_nNeighbours,exch2_neighbourId,
     &        exch2_opposingSend_record,          
     &        exch2_tProc,                        
     &        exch2_pi,exch2_pj,                  
     &        exch2_oi,exch2_oj,                  
     &        exch2_oi_f,exch2_oj_f               
                                                  
       COMMON /W2_EXCH2_HALO_SPEC/                
     &        exch2_itlo_c, exch2_ithi_c,         
     &        exch2_jtlo_c, exch2_jthi_c          
C     *** THIS FILE IS AUTOMATICALLY GENERATED ***
